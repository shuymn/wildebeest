name: Pull request checks
on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/PRs.yml'
      - '*.md'
      - 'docs/**'
      - 'renovate.json'
  pull_request:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/PRs.yml'
      - '*.md'
      - 'docs/**'
      - 'renovate.json'

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test-api:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Build
        run: npm run build

      - name: Run API tests
        run: npm run test -- --shard ${{ matrix.shard }}/${{ strategy.job-total }} --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json

  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install
        run: pnpm install && pnpm --dir frontend install

      - name: Check formatting
        run: npm run pretty

      - name: Check backend linting
        run: npm run lint:backend

      - name: Check consumer linting
        run: npm run lint:consumer

      - name: Check do linting
        run: npm run lint:do

      - name: Check frontend linting
        run: npm run lint:frontend

      - name: Check frontend types
        continue-on-error: true
        working-directory: frontend
        run: npm run types-check

      - name: Setup Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
          go-version: stable

      - name: Install sqlite3def
        run: go install github.com/sqldef/sqldef/cmd/sqlite3def@v0.16.13

      - name: Check DB schema
        run: |
          DB_ID=$(yq --output-format json wrangler.toml | jq --raw-output --exit-status '.d1_databases | first | .database_id')
          npm run database:migrate -- --local
          sqlite3def --enable-drop-table --config sqldef.yml --dry-run \
            ".wrangler/state/v3/d1/${DB_ID:?}/db.sqlite" < schema.sql | head -n 1 | grep -E '^-- Nothing is modified --$'

  test-ui:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run App in the background
        run: npm run ci-dev-test-ui &

      - name: Store Playwright version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test --json | jq --exit-status --raw-output 'first | .devDependencies["@playwright/test"].version')
          echo "Playwright version: ${PLAYWRIGHT_VERSION}"
          echo "PLAYWRIGHT_VERSION=${PLAYWRIGHT_VERSION}" >> $GITHUB_ENV

      - name: Cache Playwright
        id: cache-playwright-browsers
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3
        with:
          path: /home/runner/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ runner.arch }}-${{ env.PLAYWRIGHT_VERSION }}

      - name: Download Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
